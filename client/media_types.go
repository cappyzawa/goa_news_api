// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "news api": Application Media Types
//
// Command:
// $ goagen
// --design=news-api/design
// --out=$(GOPATH)/src/news-api
// --version=v1.2.0-dirty

package client

import (
	"github.com/goadesign/goa"
	"net/http"
)

// DecodeErrorResponse decodes the ErrorResponse instance encoded in resp body.
func (c *Client) DecodeErrorResponse(resp *http.Response) (*goa.ErrorResponse, error) {
	var decoded goa.ErrorResponse
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}

// 記事詳細のデータ (default view)
//
// Identifier: application/vnd.goa.news.api.article+json; view=default
type GoaNewsAPIArticle struct {
	Clicks      int    `form:"clicks" json:"clicks" xml:"clicks"`
	Description string `form:"description" json:"description" xml:"description"`
	HeadLine    string `form:"head_line" json:"head_line" xml:"head_line"`
	ID          int    `form:"id" json:"id" xml:"id"`
}

// Validate validates the GoaNewsAPIArticle media type instance.
func (mt *GoaNewsAPIArticle) Validate() (err error) {

	if mt.HeadLine == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "head_line"))
	}
	if mt.Description == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "description"))
	}

	return
}

// DecodeGoaNewsAPIArticle decodes the GoaNewsAPIArticle instance encoded in resp body.
func (c *Client) DecodeGoaNewsAPIArticle(resp *http.Response) (*GoaNewsAPIArticle, error) {
	var decoded GoaNewsAPIArticle
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}

// GoaNewsApiArticleCollection is the media type for an array of GoaNewsApiArticle (default view)
//
// Identifier: application/vnd.goa.news.api.article+json; type=collection; view=default
type GoaNewsAPIArticleCollection []*GoaNewsAPIArticle

// Validate validates the GoaNewsAPIArticleCollection media type instance.
func (mt GoaNewsAPIArticleCollection) Validate() (err error) {
	for _, e := range mt {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// DecodeGoaNewsAPIArticleCollection decodes the GoaNewsAPIArticleCollection instance encoded in resp body.
func (c *Client) DecodeGoaNewsAPIArticleCollection(resp *http.Response) (GoaNewsAPIArticleCollection, error) {
	var decoded GoaNewsAPIArticleCollection
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return decoded, err
}
